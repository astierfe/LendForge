# subgraph/schema.graphql - v3.0 - Multi-collateral schema

type User @entity(immutable: false) {
  id: ID!
  positions: [Position!]! @derivedFrom(field: "user")
  collaterals: [UserCollateral!]! @derivedFrom(field: "user")
  totalCollateralUSD: BigInt!
  totalBorrowed: BigInt!
  activePositions: Int!
  lifetimeDeposits: BigInt!
  lifetimeBorrows: BigInt!
  lifetimeRepayments: BigInt!
  liquidationCount: Int!
  createdAt: BigInt!
  updatedAt: BigInt!
}

type Position @entity(immutable: false) {
  id: ID!
  user: User!
  totalCollateralUSD: BigInt!  # From CollateralManager
  borrowed: BigInt!            # From LendingPool
  healthFactor: BigDecimal!
  status: PositionStatus!
  createdAt: BigInt!
  updatedAt: BigInt!
  closedAt: BigInt
  transactions: [Transaction!]! @derivedFrom(field: "position")
}

# NEW: Track individual collateral assets per user
type UserCollateral @entity(immutable: false) {
  id: ID!  # user-asset format
  user: User!
  asset: CollateralAsset!
  amount: BigInt!
  valueUSD: BigInt!
  updatedAt: BigInt!
}

# NEW: Supported collateral assets
type CollateralAsset @entity(immutable: false) {
  id: ID!  # Asset address
  symbol: String!
  decimals: Int!
  ltv: Int!  # Loan-to-value ratio
  liquidationThreshold: Int!
  enabled: Boolean!
  totalDeposited: BigInt!
  userCollaterals: [UserCollateral!]! @derivedFrom(field: "asset")
}

enum PositionStatus {
  ACTIVE
  REPAID
  LIQUIDATED
}

type Transaction @entity(immutable: false) {
  id: ID!
  position: Position!
  user: User!
  type: TransactionType!
  asset: Bytes  # NEW: Asset address for multi-collateral
  amount: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  txHash: Bytes!
  gasUsed: BigInt
}

enum TransactionType {
  DEPOSIT_ETH      # NEW: Specific for ETH deposits
  DEPOSIT_ERC20    # NEW: Specific for ERC20 deposits
  BORROW
  REPAY
  WITHDRAW_ETH     # NEW: Specific for ETH withdrawals
  WITHDRAW_ERC20   # NEW: Specific for ERC20 withdrawals
  LIQUIDATION
}

type DailyMetric @entity(immutable: false) {
  id: ID!
  date: Int!
  totalTVL: BigInt!
  totalBorrowed: BigInt!
  utilizationRate: BigDecimal!
  activeUsers: Int!
  activePositions: Int!
  depositsCount: Int!
  borrowsCount: Int!
  repaymentsCount: Int!
  liquidationsCount: Int!
  volumeDeposited: BigInt!
  volumeBorrowed: BigInt!
  volumeRepaid: BigInt!
  # NEW: Per-asset metrics
  ethTVL: BigInt!
  usdcTVL: BigInt!
  daiTVL: BigInt!
}

type GlobalMetric @entity(immutable: false) {
  id: ID!
  totalUsers: Int!
  totalPositions: Int!
  activePositions: Int!
  totalVolumeDeposited: BigInt!
  totalVolumeBorrowed: BigInt!
  totalVolumeRepaid: BigInt!
  totalLiquidations: Int!
  currentTVL: BigInt!
  currentBorrowed: BigInt!
  allTimeHighTVL: BigInt!
  allTimeHighBorrowed: BigInt!
  # NEW: Multi-collateral totals
  totalETHDeposited: BigInt!
  totalUSDCDeposited: BigInt!
  totalDAIDeposited: BigInt!
  updatedAt: BigInt!
}

type Liquidation @entity(immutable: false) {
  id: ID!
  position: Position!
  user: User!
  liquidator: Bytes!
  debtRepaid: BigInt!
  collateralSeizedUSD: BigInt!  # NEW: USD value
  timestamp: BigInt!
  blockNumber: BigInt!
  txHash: Bytes!
  healthFactorBefore: BigDecimal!
}

# NEW: Oracle deviation tracking
type PriceDeviation @entity(immutable: false) {
  id: ID!  # asset-timestamp
  asset: Bytes!
  primaryPrice: BigInt!
  fallbackPrice: BigInt!
  deviationBps: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  emergencyTriggered: Boolean!
}